
<h1>Chemical Elements</h1>

<p>Click on the table cells to see atom model and its electron configuration.</p>

<table id="maintable">
  <tr>
    <td>H<sup>1</sup></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td>He<sup>2</sup></td>
  </tr>
  <tr>
    <td>Li<sup>3</sup></td>
    <td>Be<sup>4</sup></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td>B<sup>5</sup></td>
    <td>C<sup>6</sup></td>
    <td>N<sup>7</sup></td>
    <td>O<sup>8</sup></td>
    <td>F<sup>9</sup></td>
    <td>Ne<sup>10</sup></td>
  </tr>
  <tr>
    <td>Na<sup>11</sup></td>
    <td>Mg<sup>12</sup></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td>Al<sup>13</sup></td>
    <td>Si<sup>14</sup></td>
    <td>P<sup>15</sup></td>
    <td>S<sup>16</sup></td>
    <td>Cl<sup>17</sup></td>
    <td>Ar<sup>18</sup></td>
  </tr>
  <tr>
    <td>K<sup>19</sup></td>
    <td>Ca<sup>20</sup></td>
    <td>Sc<sup>21</sup></td>
    <td>Ti<sup>22</sup></td>
    <td>V<sup>23</sup></td>
    <td>Cr<sup>24</sup></td>
    <td>Mn<sup>25</sup></td>
    <td>Fe<sup>26</sup></td>
    <td>Co<sup>27</sup></td>
    <td>Ni<sup>28</sup></td>
    <td>Cu<sup>29</sup></td>
    <td>Zn<sup>30</sup></td>
    <td>Ga<sup>31</sup></td>
    <td>Ge<sup>32</sup></td>
    <td>As<sup>33</sup></td>
    <td>Se<sup>34</sup></td>
    <td>Br<sup>35</sup></td>
    <td>Kr<sup>36</sup></td>
  </tr>
  <tr>
    <td>Rb<sup>37</sup></td>
    <td>Sr<sup>38</sup></td>
    <td>Y<sup>39</sup></td>
    <td>Zr<sup>40</sup></td>
    <td>Nb<sup>41</sup></td>
    <td>Mo<sup>42</sup></td>
    <td>Tc<sup>43</sup></td>
    <td>Ru<sup>44</sup></td>
    <td>Rh<sup>45</sup></td>
    <td>Pd<sup>46</sup></td>
    <td>Ag<sup>47</sup></td>
    <td>Cd<sup>48</sup></td>
    <td>In<sup>49</sup></td>
    <td>Sn<sup>50</sup></td>
    <td>Sb<sup>51</sup></td>
    <td>Te<sup>52</sup></td>
    <td>I<sup>53</sup></td>
    <td>Xe<sup>54</sup></td>
  </tr>
  <tr>
    <td>Cs<sup>55</sup></td>
    <td>Ba<sup>56</sup></td>
    <td>Lu<sup>71</sup></td>
    <td>Hf<sup>72</sup></td>
    <td>Ta<sup>73</sup></td>
    <td>W<sup>74</sup></td>
    <td>Re<sup>75</sup></td>
    <td>Os<sup>76</sup></td>
    <td>Ir<sup>77</sup></td>
    <td>Pt<sup>78</sup></td>
    <td>Au<sup>79</sup></td>
    <td>Hg<sup>80</sup></td>
    <td>Tl<sup>81</sup></td>
    <td>Pb<sup>82</sup></td>
    <td>Bi<sup>83</sup></td>
    <td>Po<sup>84</sup></td>
    <td>At<sup>85</sup></td>
    <td>Rn<sup>86</sup></td>
  </tr>
  <tr>
    <td>Fr<sup>87</sup></td>
    <td>Ra<sup>88</sup></td>
    <td>Lr<sup>103</sup></td>
    <td>Rf<sup>104</sup></td>
    <td>Db<sup>105</sup></td>
    <td>Sg<sup>106</sup></td>
    <td>Bh<sup>107</sup></td>
    <td>Hs<sup>108</sup></td>
    <td>Mt<sup>109</sup></td>
    <td>Ds<sup>110</sup></td>
    <td>Rg<sup>111</sup></td>
    <td>Cn<sup>112</sup></td>
    <td>Nh<sup>113</sup></td>
    <td>Fl<sup>114</sup></td>
    <td>Mc<sup>115</sup></td>
    <td>Lv<sup>116</sup></td>
    <td>Ts<sup>117</sup></td>
    <td>Og<sup>118</sup></td>
  </tr>
  <tr>
    <td></td>
    <td></td>
    <td>La<sup>57</sup></td>
    <td>Ce<sup>58</sup></td>
    <td>Pr<sup>59</sup></td>
    <td>Nd<sup>60</sup></td>
    <td>Pm<sup>61</sup></td>
    <td>Sm<sup>62</sup></td>
    <td>Eu<sup>63</sup></td>
    <td>Gd<sup>64</sup></td>
    <td>Tb<sup>65</sup></td>
    <td>Dy<sup>66</sup></td>
    <td>Ho<sup>67</sup></td>
    <td>Er<sup>68</sup></td>
    <td>Tm<sup>69</sup></td>
    <td>Yb<sup>70</sup></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td></td>
    <td></td>
    <td>Ac<sup>89</sup></td>
    <td>Th<sup>90</sup></td>
    <td>Pa<sup>91</sup></td>
    <td>U<sup>92</sup></td>
    <td>Np<sup>93</sup></td>
    <td>Pu<sup>94</sup></td>
    <td>Am<sup>95</sup></td>
    <td>Cm<sup>96</sup></td>
    <td>Bk<sup>97</sup></td>
    <td>Cf<sup>98</sup></td>
    <td>Es<sup>99</sup></td>
    <td>Fm<sup>100</sup></td>
    <td>Md<sup>101</sup></td>
    <td>No<sup>102</sup></td>
    <td></td>
    <td></td>
  </tr>
</table>

<br>

<h4>Name</h4>

<div id="atnam"></div>

<h4>Atomic number</h4>

<div id="atnum"></div>

<h4>Electron configuration</h4>

<div id="confdiv"></div>

<h4>Graphical configuration</h4>

<canvas id="graphicconf" width="870" height="60"></canvas>

<h4>Atom model</h4>

<canvas id="atommodel" width="200" height="200"></canvas>

<br>

<script>

  // ------------------------------------------------------

  const numElectrons = createNumElectrons();

  const orbitals = ["1s","2s","2p","3s",
                    "3p","4s","3d","4p",
                    "5s","4d","5p","6s",
                    "4f","5d","6p","7s",
                    "5f","6d","7p"];

  // Square size
  const rectSize = 14;

  // Radius of electron circle
  const electronRadius = 5;

  // Graphical configuration square position
  const posY = 20;

  // Arrow colors
  const upArrowColor = "#ff0000";
  const downArrowColor = "#000000";

  // Atom model and configuration background color
  const backgroundColor = "#ffa099";

  const fullAngle = 2 * Math.PI;

  // Distance between shells
  const shellDistance = 15;

  const atomNames = [
    "Hydrogen","Helium","Lithium","Berylium","Boron","Carbon",
    "Nitrogen","Oxygen","Fluorine","Neon","Sodium","Magnesium",
    "Aluminium","Silicon","Phosphorus","Sulfur","Chlorine",
    "Argon","Potassium","Calcium","Scandium","Titanium","Vanadium",
    "Chromium","Manganese","Iron","Cobalt","Nickel","Copper",
    "Zinc","Gallium","Germanium","Arsenic","Selenium","Bromine",
    "Krypton","Rubidium","Strontium","Yttrium","Zirconium","Niobium",
    "Molybdenum","Technetium","Ruthenium","Rhodium","Palladium",
    "Silver","Cadmium","Indium","Tin","Antimony","Tellurium",
    "Iodine","Xenon","Caesium","Barium","Lanthanum","Cerium",
    "Praseodymium","Neodymium","Promethium","Samarium","Europium",
    "Gadolinium","Terbium","Dysprosium","Holmium","Erbium",
    "Thulium","Ytterbium","Lutetium","Hafnium","Tantalum",
    "Tungsten","Rhenium","Osmium","Iridium","Platinum","Gold",
    "Mercury","Thallium","Lead","Bismuth","Polonium","Astatine",
    "Radon","Francium","Radium","Actinium","Thorium","Proctatinium",
    "Uranium","Neptunium","Plutonium","Americium","Curium",
    "Berkelium","Californium","Einsteinium","Fermium","Mendelevium",
    "Nobelium","Lawrencium","Rutherfordium","Dubnium","Seaborgium",
    "Bohrium","Hassium","Meitnerium","Darmstadtium","Roentgenium",
    "Copernicium","Nihonium","Flerovium","Moscovium","Livermorium",
    "Tennessine","Oganesson"
  ];

  let table = document.getElementById('maintable');
  let lastCell = table.rows[0].cells[0];

  // ------------------------------------------------------

  function createNumElectrons(){
    let numElectrons = new Map();
    let symbols = ['s','p','d','f'];
    let e = 2;
    for(let i=0;i<symbols.length;i++){
      numElectrons.set(symbols[i], e);
      e += 4;
    }
    return numElectrons;
  }

  function addEvents(){
    document.querySelector('#maintable').addEventListener('click', (ev) => {
      const x = ev.target.cellIndex;
      const y = ev.target.parentElement.rowIndex;
      if (x !== undefined && y !== undefined) {
        displayElement(x,y);
      }
    });
  }

  function pointsOnCircle(numPoints,radius) {

    let angleBetween = fullAngle / numPoints;
    let points = Array(numPoints);

    let angle = 0;
    for(let i=0;i<numPoints;i++){
      points[i] = [Math.cos(angle)*radius,Math.sin(angle)*radius];
      angle += angleBetween;
    }

    return points;

  }

  function orbSort(orbitals){

    let newArr = [];

    for(let i=1;i<=7;i++){
      for(let j=0;j<orbitals.length;j++){
        if(orbitals[j][0]==i){
          newArr.push(orbitals[j]);
        }
      }
    }

    return newArr;

  }

  function electronsOnOrbital(orbital){
    return numElectrons.get(orbital.slice(-1));
  }

  function electronConfiguration(n){

    // Sum electrons
    let index = 0; let sum = 0;
    while(sum < n){ sum += electronsOnOrbital(orbitals[index++]); }

    // Add complete orbitals
    const lastIndex = index - 1;
    let conf = [];
    for (let i = 0; i < lastIndex; i++) {
      conf.push(orbitals[i] + electronsOnOrbital(orbitals[i]));
    }

    // Add last orbital
    conf.push(orbitals[lastIndex] + (electronsOnOrbital(orbitals[lastIndex]) - sum + n));

    // Sort orbitals
    return orbSort(conf);

  }

  function numShells(conf){
    return conf[conf.length-1][0];
  }

  function highlightCell(x,y){
    lastCell.style.backgroundColor = 'cornsilk';
    table.rows[y].cells[x].style.backgroundColor = 'aqua';
    lastCell = table.rows[y].cells[x];
  }

  // Draw arrows in group of squares
  function drawArrows(color,rectCount,arrowX,n,ctx){

    ctx.fillStyle = color;

    while(n>0&&rectCount>0){
      ctx.beginPath();
      ctx.fillRect(arrowX,posY,rectSize/2,rectSize);
      ctx.stroke();
      n--;
      rectCount--;
      arrowX += rectSize;
    }

    return n;

  }

  function orbitalSquares(orbital){
    let squares;
    switch(orbital){
        case "s":
          squares = 1;
          break;
        case "p":
          squares = 3;
          break;
        case "d":
          squares = 5;
          break;
        case "f":
          squares = 7;
          break;
        default:
          break;
    }
    return squares;
  }

  function electronsOnShell(n,confArr){
    let i = 0;
    while(confArr[i][0]!=n){ i++; }
    let total = 0;
    do {
      total += parseInt(confArr[i].substring(2),10);
      i++;
    } while(i<confArr.length&&n==confArr[i][0]);
    return total;
  }

  function confToString(confArr){
    let confString = "";
    for(let i=0;i<confArr.length;i++){
      confString += confArr[i] + (i == confArr.length-1 ? "" : " ");
    }
    return confString;
  }

  function displayTextInfo(n,confArr){
    document.getElementById("atnam").innerHTML = atomNames[n-1];
    document.getElementById("atnum").innerHTML = n;
    document.getElementById("confdiv").innerHTML = confToString(confArr);
  }

  function getAtomicNumber(x,y){
    let mtch = table.rows[y].cells[x].innerHTML.match(/<sup>(.*?)<\/sup>/g);
    return null === mtch ?
      mtch :
      parseInt(mtch.map(function(val){
                          return val.replace(/<\/?sup>/g,'');
                        })[0],
               10);
  }

  function showAtom(n){

    if(null !== n){

      // Get electron configuration
      let confArr = electronConfiguration(n);

      // Show name, atomic number, electron configuration
      displayTextInfo(n,confArr);

      // Graphics
      drawGraphicalConfiguration(confArr,n);
      drawAtomModel(confArr);

    } else {
      console.log("No atomic number");
    }

  }

  // Rectangles
  function drawGraphicalConfiguration(confArr,n){

    let can = document.getElementById("graphicconf");
    let ctx = can.getContext("2d");
    ctx.fillStyle = backgroundColor;
    ctx.fillRect(0, 0, 870, 60);

    let posX = 10;

    for(let i=0;i<confArr.length;i++){

      let squares = orbitalSquares(confArr[i][1]);

      const initX = posX;

      // Draw group of empty squares
      for(let j=0;j<squares;j++){
        ctx.beginPath();
        ctx.rect(posX,posY,rectSize,rectSize);
        ctx.stroke();
        posX += rectSize;
      }

      // Draw up arrows and then down arrows
      // Value returned from function is
      // number of remaining electrons
      n = drawArrows(downArrowColor,
                     squares,
                     initX+rectSize/2,
                     drawArrows(upArrowColor,
                                squares,
                                initX,
                                n,
                                ctx),
                     ctx);

      // Position of next square group
      posX += rectSize;

    }

  }

  // Circles
  function drawAtomModel(confArr){

    const shells = numShells(confArr);
    const atomX = 100;
    const atomY = 100;

    let can = document.getElementById("atommodel");
    let ctx = can.getContext("2d");
    ctx.fillStyle = backgroundColor;

    // Draw atom background
    ctx.fillRect(0, 0, 200, 200);

    // Draw circles for shells
    for(let i=1;i<=shells;i++){

      // Radius of current shell
      let radius = i * shellDistance;

      // Draw shell
      ctx.beginPath();
      ctx.arc(atomX, atomY, radius, 0, fullAngle);
      ctx.stroke();

      // Get electron positions
      let points = pointsOnCircle(electronsOnShell(i,confArr),radius);

      // Draw electrons on shell
      for(let j=0;j<points.length;j++){
        ctx.beginPath();
        ctx.arc(points[j][0]+atomX, points[j][1]+atomY,
                electronRadius, 0, fullAngle);
        ctx.stroke();
      }

    }
  }

  // Main function
  function displayElement(x,y){

    let t0 = performance.now();

    // Select cell
    highlightCell(x,y);

    // Get atomic number and show data
    showAtom(getAtomicNumber(x,y));

    let t1 = performance.now();
    console.log(t1 - t0 + "ms");

  }

  // ------------------------------------------------------

  addEvents();

  // ------------------------------------------------------

</script>
